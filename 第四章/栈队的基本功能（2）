/*链接表示*/
/*储存结构*/
struct Node ;
typedef struct Node * PNode ; 
struct Node{
        Datamype info ;
        PNode link ;
        };

 struct LinkQueue {
        PNode f ; 
        PNoder ；
       };
 typedef struct LinkQueue * PLinkQueue ;


/*创建一个空队*/
 PLinkQueue createEmptyQueue _ link ( void ) 
{     PLinkQueue plqu ;
      plqu =( PLinkQueue ) malloc ( sizeof ( struct LinkQueue ));
      if ( plqu != NULL )
     {     plqu -> f = NULL ;
           plqu -> r = NULL ;
     }
     else 
          printf (" Out of space !！\ n "); 
      return plqu ;
}

/*判断是否为空队*/
 int is EmptyQueue _ link ( PLinkQueue plqu )
{    
       return ( plqu -> f == NULL );
}

 /*入队*/
 void enQueue _ link ( PLinkQueue plqu , Datatype x ) 
{  PNode p ;
   p =( PNode ) malloc ( sizeof ( struct Node )); 
   if ( p == NULL ) printf (" Out of space !＂); 
   else { p -> info = x ;
            p -> link = NULL ; 
            if ( plqu -> f == NULL ) plqu -> f = P ; 
            else plqu -> r -> link = P； 
            plqu ->= P ; 
            }
}

/*出队*/
 void deQueue _link( PLinkQueue plqu )
 {  PNode P；
    if( plqu -> f == NULL ) printf (＂ Empty queue .\ n “): 
    elae {
         P = plqu - >f ;
         plqu -> f =p->link; 
         free ( p ): 
         }
}

 
/*取队列头部结点的值*/
 Datatype frontQueue _ link ( PLinkQueue plqu )
{      if ( plqu -> f == NULL )  printf (" Empty queue . \n "):
       else return ( plqu -> f -> info );
}

